{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\react\\\\health-id\\\\medical_id\\\\src\\\\context\\\\report\\\\reportState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReportContex from \"./reportcontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReportState = props => {\n  _s();\n\n  const host = 'http://localhost:3001';\n  const initialReport = [];\n  const [reports, setReports] = useState(initialReport); //getNote\n\n  const getReport = async () => {\n    const response = await fetch(`${host}/api/reports/fetchallreports`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    setReports(json);\n  }; //addReport\n\n\n  const addReport = async (disease_name, doctor_name, medicines_name, report_pic) => {\n    console.log(\"Adding a new report\"); //API CALL\n\n    const response = await fetch(`${host}/api/reports/addreport`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        disease_name,\n        doctor_name,\n        medicines_name,\n        report_pic\n      })\n    });\n    const report = await response.json();\n    setReports(reports.concat(report));\n  }; //delete report\n\n\n  const deleteReport = async id => {\n    const response = await fetch(`${host}/api/reports/deletereport/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    console.log(\"Deleting the report with id \" + id);\n    const newReport = reports.filter(note => {\n      return note._id !== id;\n    });\n    setReports(newReport);\n  }; //edit a report \n  // const editReport = async (id,disease_name,doctor_name,medicines_name,report_pic)=>{\n  //     const response = await fetch(`${host}/api/reports/editreport/${id}`,{\n  //         method:\"PUT\",\n  //         headers:{\n  //             'Content-Type':'application/json',\n  //             'auth-token':localStorage.getItem('token')\n  //         },\n  //         body: JSON.stringify({disease_name,doctor_name,medicines_name,report_pic})\n  //     })\n  //     let newReport = JSON.parse(JSON.stringify(reports))\n  //     //logic for edit\n  //     for(let index = 0;index<newReport.length;index++){\n  //         const element = newReport[index]\n  //         if(element._id === id){\n  //             element.disease_name = disease_name,\n  //             element.doctor_name  = doctor_name,\n  //             element.medicines_name = medicines_name,\n  //             element.report_pic = report_pic\n  //             break;\n  //         }\n  //     }\n  //     setReports(newReport)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(ReportContex.Provider, {\n    value: {\n      reports,\n      addReport,\n      getReport,\n      deleteReport\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReportState, \"Ax+zYcJJItAYs22gVce/3fUxXak=\");\n\n_c = ReportState;\nexport default ReportState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportState\");","map":{"version":3,"names":["React","useState","ReportContex","ReportState","props","host","initialReport","reports","setReports","getReport","response","fetch","method","headers","localStorage","getItem","json","addReport","disease_name","doctor_name","medicines_name","report_pic","console","log","body","JSON","stringify","report","concat","deleteReport","id","newReport","filter","note","_id","children"],"sources":["C:/Users/ASUS/OneDrive/Desktop/react/health-id/medical_id/src/context/report/reportState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReportContex from \"./reportcontext\";\r\n\r\nconst ReportState =(props) =>{\r\n    const host = 'http://localhost:3001'\r\n    const initialReport = []\r\n    const [reports,setReports] = useState(initialReport)\r\n\r\n\r\n    //getNote\r\n    const getReport = async()=>{\r\n        const response = await fetch(`${host}/api/reports/fetchallreports`,{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'auth-token':localStorage.getItem('token')\r\n            }\r\n        })\r\n        const json = await response.json()\r\n        setReports(json)\r\n    }\r\n\r\n    //addReport\r\n    const addReport = async (disease_name,doctor_name,medicines_name,report_pic)=>{\r\n        console.log(\"Adding a new report\")\r\n\r\n        //API CALL\r\n        const response = await fetch(`${host}/api/reports/addreport`,{\r\n            method:\"POST\",\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'auth-token':localStorage.getItem('token')\r\n            },\r\n            body : JSON.stringify({disease_name,doctor_name,medicines_name,report_pic})\r\n        })\r\n        const report = await response.json()\r\n        setReports(reports.concat(report))\r\n    }\r\n\r\n    //delete report\r\n    const deleteReport = async(id)=>{\r\n        const response = await fetch(`${host}/api/reports/deletereport/${id}`,{\r\n            method:\"DELETE\",\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'auth-token':localStorage.getItem('token')\r\n            }\r\n        })\r\n        const json = response.json()\r\n        console.log(json)\r\n\r\n        console.log(\"Deleting the report with id \"+id)\r\n        const newReport = reports.filter((note)=>{return note._id !==id})\r\n        setReports(newReport)\r\n    }\r\n\r\n    //edit a report \r\n    // const editReport = async (id,disease_name,doctor_name,medicines_name,report_pic)=>{\r\n    //     const response = await fetch(`${host}/api/reports/editreport/${id}`,{\r\n    //         method:\"PUT\",\r\n    //         headers:{\r\n    //             'Content-Type':'application/json',\r\n    //             'auth-token':localStorage.getItem('token')\r\n    //         },\r\n    //         body: JSON.stringify({disease_name,doctor_name,medicines_name,report_pic})\r\n    //     })\r\n    //     let newReport = JSON.parse(JSON.stringify(reports))\r\n    //     //logic for edit\r\n    //     for(let index = 0;index<newReport.length;index++){\r\n    //         const element = newReport[index]\r\n    //         if(element._id === id){\r\n    //             element.disease_name = disease_name,\r\n    //             element.doctor_name  = doctor_name,\r\n    //             element.medicines_name = medicines_name,\r\n    //             element.report_pic = report_pic\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    //     setReports(newReport)\r\n    // }\r\n    \r\n    return(\r\n        <ReportContex.Provider value={{reports,addReport,getReport,deleteReport}}>\r\n            {props.children}\r\n        </ReportContex.Provider>\r\n    )\r\n}\r\n\r\nexport default ReportState\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;;AAEA,MAAMC,WAAW,GAAGC,KAAD,IAAU;EAAA;;EACzB,MAAMC,IAAI,GAAG,uBAAb;EACA,MAAMC,aAAa,GAAG,EAAtB;EACA,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAACK,aAAD,CAArC,CAHyB,CAMzB;;EACA,MAAMG,SAAS,GAAG,YAAS;IACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,8BAAT,EAAuC;MAC/DO,MAAM,EAAC,KADwD;MAE/DC,OAAO,EAAC;QACJ,gBAAe,kBADX;QAEJ,cAAaC,YAAY,CAACC,OAAb,CAAqB,OAArB;MAFT;IAFuD,CAAvC,CAA5B;IAOA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAT,EAAnB;IACAR,UAAU,CAACQ,IAAD,CAAV;EACH,CAVD,CAPyB,CAmBzB;;;EACA,MAAMC,SAAS,GAAG,OAAOC,YAAP,EAAoBC,WAApB,EAAgCC,cAAhC,EAA+CC,UAA/C,KAA4D;IAC1EC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAD0E,CAG1E;;IACA,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,wBAAT,EAAiC;MACzDO,MAAM,EAAC,MADkD;MAEzDC,OAAO,EAAC;QACJ,gBAAe,kBADX;QAEJ,cAAaC,YAAY,CAACC,OAAb,CAAqB,OAArB;MAFT,CAFiD;MAMzDS,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;QAACR,YAAD;QAAcC,WAAd;QAA0BC,cAA1B;QAAyCC;MAAzC,CAAf;IANkD,CAAjC,CAA5B;IAQA,MAAMM,MAAM,GAAG,MAAMjB,QAAQ,CAACM,IAAT,EAArB;IACAR,UAAU,CAACD,OAAO,CAACqB,MAAR,CAAeD,MAAf,CAAD,CAAV;EACH,CAdD,CApByB,CAoCzB;;;EACA,MAAME,YAAY,GAAG,MAAMC,EAAN,IAAW;IAC5B,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,6BAA4ByB,EAAG,EAAxC,EAA0C;MAClElB,MAAM,EAAC,QAD2D;MAElEC,OAAO,EAAC;QACJ,gBAAe,kBADX;QAEJ,cAAaC,YAAY,CAACC,OAAb,CAAqB,OAArB;MAFT;IAF0D,CAA1C,CAA5B;IAOA,MAAMC,IAAI,GAAGN,QAAQ,CAACM,IAAT,EAAb;IACAM,OAAO,CAACC,GAAR,CAAYP,IAAZ;IAEAM,OAAO,CAACC,GAAR,CAAY,iCAA+BO,EAA3C;IACA,MAAMC,SAAS,GAAGxB,OAAO,CAACyB,MAAR,CAAgBC,IAAD,IAAQ;MAAC,OAAOA,IAAI,CAACC,GAAL,KAAYJ,EAAnB;IAAsB,CAA9C,CAAlB;IACAtB,UAAU,CAACuB,SAAD,CAAV;EACH,CAdD,CArCyB,CAqDzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACI,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAACxB,OAAD;MAASU,SAAT;MAAmBR,SAAnB;MAA6BoB;IAA7B,CAA9B;IAAA,UACKzB,KAAK,CAAC+B;EADX;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAnFD;;GAAMhC,W;;KAAAA,W;AAqFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}